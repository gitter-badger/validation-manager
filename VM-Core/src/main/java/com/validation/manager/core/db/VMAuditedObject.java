/**
 * This file was generated by the Jeddict
 */
package com.validation.manager.core.db;

import com.validation.manager.core.AuditedObject;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Lob;
import javax.persistence.MappedSuperclass;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

@MappedSuperclass
public abstract class VMAuditedObject implements AuditedObject {

    @Column(name = "reason")
    @Lob
    @Basic(optional = false)
    @NotNull
    @Size(max = 2147483647)
    private String reason;

    @Column(name = "modifier_id")
    @Basic(optional = false)
    @NotNull
    private int modifierId;

    @Column(name = "modification_time")
    @Basic(optional = false)
    @Temporal(TemporalType.TIMESTAMP)
    @NotNull
    private Date modificationTime;

    @Override
    public String getReason() {
        return this.reason;
    }

    @Override
    public void setReason(String reason) {
        this.reason = reason;
    }

    @Override
    public Integer getModifierId() {
        return this.modifierId;
    }

    @Override
    public void setModifierId(int modifierId) {
        this.modifierId = modifierId;
    }

    @Override
    public Date getModificationTime() {
        return this.modificationTime;
    }

    @Override
    public void setModificationTime(Date modificationTime) {
        this.modificationTime = modificationTime;
    }

    /**
     * Update the fields.
     *
     * @param target target object
     * @param source source object
     */
    public void update(VMAuditedObject target,
            VMAuditedObject source) {
        target.setReason(source.getReason());
        target.setModificationTime(source.getModificationTime());
        target.setModifierId(source.getModifierId());
    }

    @Override
    public boolean isChangeVersionable() {
        return true;
    }
}
